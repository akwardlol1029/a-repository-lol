local oldGraphics = false
local devPrintMode = true

pcall(function()
    game.Players.LocalPlayer.PlayerGui.new:Destroy()
end)

warn([[
**THIS SCRIPT IS ONLY COMPATIBLE WITH THE NEW UI (2024)**
---- Features ----
-The main 2016 topbar, backpack included and working
-The leaderboard, teams and leaderstats values included
-A reskin of the modern chat to look like legacy
]])

if oldGraphics then
	if not (game.Lighting.Technology == Enum.Technology.Compatibility or game.Lighting:FindFirstChildWhichIsA("ColorGradingEffect")) then
		local RunService = game:GetService("RunService")
		local RestrictedLighting = {
			["EnvironmentDiffuseScale"] = 0,
			["EnvironmentSpecularScale"] = 0,
			["ExposureCompensation"] = 0
		}
		local RestrictedEffects = {
			"DepthOfFieldEffect",
			"Atmosphere"
		}

		local function RemoveEffect(effect)
			if table.find(RestrictedEffects, effect.ClassName) then
				RunService.RenderStepped:Wait()
				effect:Destroy()
			end
		end

		if not game["Run Service"]:IsStudio() then
			game.Lighting.Technology = Enum.Technology.Compatibility
		end
		
		for property, value in pairs(RestrictedLighting) do
			game.Lighting[property] = value
		end

		for _, effects in pairs(game.Lighting:GetDescendants()) do
			RemoveEffect(effects)
		end

		game.Lighting.DescendantAdded:Connect(RemoveEffect)

		game.Lighting.Changed:Connect(function(property)
			local Property = RestrictedLighting[property]

			if Property then
				game.Lighting[property] = Property
			end
		end)
	end
end

--[[chat]]

--[[chat settings]]
mainTimer = 20
textTimer = 60

mainFade = 1
textFade = 1

inputHeightAdjustmentLength = 0.033

--[[chat init]]
if game.TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
	task.spawn(function()
		--[[local record = game.ChangeHistoryService:TryBeginRecording("chatChange")]]

		local chat = game.CoreGui.ExperienceChat
		
		appLayout = chat.appLayout
		appLayout.Position = UDim2.fromScale(0,0)
		appLayout.Size = UDim2.fromScale(0.4,0.344)
		appLayout.layout:Remove()
		appLayout.uiSizeConstraint:Remove()

		local channelBar = appLayout.channelBar
		channelBar.Size = UDim2.new(1,0,0,34)

		chatInputBar = appLayout.chatInputBar
		chatInputBar.BackgroundColor3 = Color3.new(0,0,0)
		chatInputBar.BackgroundTransparency = 0.6
		chatInputBar.Position = UDim2.new(0,0,1,-42)
		chatInputBar.Size = UDim2.new(1,0,0,42)

		chatInputBar.UIPadding:Remove()
		chatInputBar.UISizeConstraint:Remove()

		chatWindow = appLayout.chatWindow
		chatWindow.Position = UDim2.fromOffset(0,2)
		chatWindow.Size = UDim2.new(1,0,1,-46)
		chatWindow.BackgroundColor3 = Color3.new(0,0,0)
		chatWindow.BackgroundTransparency = 0.6

		chatWindow.scrollingView.bottomLockedScrollView.padding.PaddingTop = UDim.new(0,2)

		appLayout.topPadding.Visible = false
		appLayout.bottomBorder.Visible = false
		appLayout.topBorder.Visible = false

		inputBackground = chatInputBar.Background
		inputBackground.Border:Remove()
		inputBackground.Corner:Remove()
		inputBackground.BackgroundColor3 = Color3.new(1,1,1)
		inputBackground.BackgroundTransparency = 0.6
		inputBackground.AutomaticSize = Enum.AutomaticSize.None
		inputBackground.Position = UDim2.new(0,7,0,7)
		inputBackground.Size = UDim2.new(1,-14,1,-14)

		local inputContainer = inputBackground.Container
		inputContainer.AutomaticSize = Enum.AutomaticSize.None
		inputContainer.Size = UDim2.fromScale(1,1)
		inputContainer.SendButton.Visible = false

		local inputTextContainer = inputContainer.TextContainer
		inputTextContainer.Position = UDim2.fromOffset(5,5)
		inputTextContainer.UIPadding:Remove()

		local inputTextBoxContainer = inputTextContainer.TextBoxContainer
		inputTextBoxContainer.AutomaticSize = Enum.AutomaticSize.Y
		inputTextBoxContainer.AnchorPoint = Vector2.new(0,0)
		inputTextBoxContainer.Position = UDim2.fromScale(0,0)
		inputTextBoxContainer.Size = UDim2.new(1,-10,1,-10)

		inputTextBox = inputTextBoxContainer.TextBox
		inputTextBox.Font = Enum.Font.SourceSansBold
		inputTextBox.PlaceholderText = `To chat click here or press "/" key`
		inputTextBox.PlaceholderColor3 = Color3.new(0,0,0)
		inputTextBox.TextColor3 = Color3.new(0,0,0)
		inputTextBox.TextStrokeTransparency = 1
		inputTextBox.TextTransparency = 0.4
		inputTextBox.AutomaticSize = Enum.AutomaticSize.None

		focused = false

		inputTextBox.Focused:Connect(function()
			focused = true
		end)

		inputTextBox.FocusLost:Connect(function()
			focused = false
		end)

		starterMessage = Instance.new("Frame")
		starterMessage.Size = UDim2.fromScale(1,0)
		starterMessage.BackgroundTransparency = 1
		starterMessage.AutomaticSize = Enum.AutomaticSize.XY
		starterMessage.Parent = chatWindow.scrollingView.bottomLockedScrollView.RCTScrollView.RCTScrollContentView

		local TextMessage = Instance.new("Frame")
		TextMessage.Name = "TextMessage"
		TextMessage.Parent = starterMessage
		TextMessage.BackgroundTransparency = 1.000
		TextMessage.Size = UDim2.new(0,0,0,0)
		TextMessage.AutomaticSize = Enum.AutomaticSize.XY

		local BodyText = Instance.new("TextLabel")
		BodyText.Name = "BodyText"
		BodyText.Parent = TextMessage
		BodyText.BackgroundTransparency = 1.000
		BodyText.Size = UDim2.new(1, 0, 0, 0)
		BodyText.Font = Enum.Font.SourceSansBold
		BodyText.Text = "Chat '/?' or '/help' for a list of chat commands."
		BodyText.TextColor3 = Color3.fromRGB(255, 255, 255)
		BodyText.TextSize = 18.000
		BodyText.TextStrokeTransparency = 0.750
		BodyText.TextWrapped = true
		BodyText.TextXAlignment = Enum.TextXAlignment.Left
		BodyText.TextYAlignment = Enum.TextYAlignment.Top
		BodyText.AutomaticSize = Enum.AutomaticSize.XY

		--[[game.ChangeHistoryService:FinishRecording(record, Enum.FinishRecordingOperation.Commit)]]

		maintainedBoxes = {}

		local propertyChanges = nil

		transparency = 0
		textTransparency = 0

		elapsed = 0

		local NAME_COLORS =
			{
				Color3.new(253/255, 41/255, 67/255), -- BrickColor.new("Bright red").Color,
				Color3.new(1/255, 162/255, 255/255), -- BrickColor.new("Bright blue").Color,
				Color3.new(2/255, 184/255, 87/255), -- BrickColor.new("Earth green").Color,
				BrickColor.new("Bright violet").Color,
				BrickColor.new("Bright orange").Color,
				BrickColor.new("Bright yellow").Color,
				BrickColor.new("Light reddish violet").Color,
				BrickColor.new("Brick yellow").Color,
			}

		local function GetNameValue(pName)
			local value = 0
			for index = 1, #pName do
				local cValue = string.byte(string.sub(pName, index, index))
				local reverseIndex = #pName - index + 1
				if #pName%2 == 1 then
					reverseIndex = reverseIndex - 1
				end
				if reverseIndex%4 >= 2 then
					cValue = -cValue
				end
				value = value + cValue
			end
			return value
		end

        -- Function to add brackets to tagged text and replace all <font> tags
        function add_brackets_and_replace_all_fonts(input, e)
			if e then
				-- Step 1: Add brackets to tagged text
				
				-- Collect all tags in the input and their content
				local tags = {}
				
				-- Match any tag pattern with content inside
				for full_tag, tag_name, attr, inner_text in input:gmatch("(<(%w+)(.-)>(.-)</%2>)") do
					table.insert(tags, {full_tag = full_tag, tag_name = tag_name, attr = attr, inner_text = inner_text})
				end
				
				-- Process each tag and apply the necessary changes
				for i, tag_info in ipairs(tags) do
					local middle = tag_info.inner_text
					local new_tag = ""

					-- If it's the last tag, shift the closing bracket left
					if i == #tags then
						if #middle > 1 then
							local enclosed_part = middle:sub(1, -2)  -- Everything except the last character
							local last_char = middle:sub(-1)  -- Last character stays outside
							new_tag = string.format("<%s%s>[%s]%s</%s>", tag_info.tag_name, tag_info.attr, enclosed_part, last_char, tag_info.tag_name)
						else
							new_tag = string.format("<%s%s>[%s]</%s>", tag_info.tag_name, tag_info.attr, middle, tag_info.tag_name)
						end
					else
						-- For all other tags, enclose everything in brackets
						new_tag = string.format("<%s%s>[%s]</%s>", tag_info.tag_name, tag_info.attr, middle, tag_info.tag_name)
					end
					
					-- Replace the original tag with the modified one
					input = input:gsub(tag_info.full_tag, new_tag, 1)
				end
			end

            -- Step 2: Replace **all** occurrences of the <font> tag
            input = input:gsub('<font color="#b480ff">(.-)</font>', '<font color="#6b327c">%1</font>')

            return input
        end

		local color_offset = 0
		local function ComputeNameColor(pName)
			return NAME_COLORS[((GetNameValue(pName) + color_offset) % #NAME_COLORS) + 1]
		end

		chatWindow.scrollingView.bottomLockedScrollView.RCTScrollView.RCTScrollContentView.DescendantAdded:Connect(function(c)
			if c:IsA("TextLabel") then
				print(c.Text)
                c.Text = add_brackets_and_replace_all_fonts(c.Text, c.Name:sub(1,3) ~= "0-{")
				table.insert(maintainedBoxes, c)
			end
		end)

		for i, c in pairs(chatWindow.scrollingView.bottomLockedScrollView.RCTScrollView.RCTScrollContentView:GetDescendants()) do
			if c:IsA("TextLabel") then
				print(c.Text)
                c.Text = add_brackets_and_replace_all_fonts(c.Text, c.Name:sub(1,3) ~= "0-{")
				table.insert(maintainedBoxes, c)
			end
		end


		appLayout.MouseMoved:Connect(function()
			elapsed = 0
		end)
	end)
end

--[[main ui]]
local test = false
local cg = game.CoreGui
local tba = test and game.StarterGui.testSubject or cg:WaitForChild("TopBarApp")

local bc_storage = {
	"rbxassetid://18989020969",
	"rbxassetid://18989021207",
	"rbxassetid://18989021430"
}

tba.ResetOnSpawn = false

cg.ChildAdded:Connect(function(c)
	if c.Name == "TooltipLayer" then
		c.Enabled = false
	end
	if c:IsA("ScreenGui") then
		if c.IgnoreGuiInset == false then
			c.IgnoreGuiInset = true
			local padding = Instance.new("UIPadding")
			padding.PaddingTop = UDim.new(0,36)
			padding.Parent = c
		end
	end
end)

local menuIconHolder = tba:WaitForChild("MenuIconHolder")
menuIconHolder.Position = UDim2.fromOffset(0,0)
menuIconHolder.Size = UDim2.new(1,0,0,36)
menuIconHolder.BackgroundColor3 = Color3.fromRGB(31,31,31)
menuIconHolder.BackgroundTransparency = 0.5
menuIconHolder.ZIndex = 0

local triggerPoint = menuIconHolder:WaitForChild('TriggerPoint')
triggerPoint.Position = UDim2.fromOffset(0,0)
triggerPoint.Size = UDim2.fromOffset(50,36)

local menuBackground = triggerPoint:WaitForChild("Background")
menuBackground.AnchorPoint = Vector2.new(0,0)
menuBackground.Position = UDim2.new(0.5,-16,0.5,-12)
menuBackground.Size = UDim2.fromOffset(32,25)
menuBackground.BackgroundTransparency = 1

local scalingIcon = menuBackground:WaitForChild("ScalingIcon"):Clone()
scalingIcon.Image = "rbxasset://textures/ui/Menu/Hamburger.png"
scalingIcon.AnchorPoint = Vector2.new(0.5,0.5)
scalingIcon.Position = UDim2.fromScale(0.5,0.5)
scalingIcon.Size = UDim2.fromScale(1,1)
scalingIcon.ImageRectSize = Vector2.new(0,0)
scalingIcon.ImageRectOffset = Vector2.new(0,0)
scalingIcon.Parent = menuBackground

menuBackground.ScalingIcon.Visible = false

local unibarLeftFrame = tba:WaitForChild("UnibarLeftFrame")
unibarLeftFrame.AnchorPoint = Vector2.new(0,0)
unibarLeftFrame.Position = UDim2.fromScale(0,0)
unibarLeftFrame.Size = UDim2.new(0.5,-16,0,36)

local rf = Instance.new("Frame")
rf.Position = UDim2.fromScale(1,0)
rf.Size = UDim2.fromOffset(170,36)
rf.BackgroundTransparency = 1
rf.Parent = tba

local padding = unibarLeftFrame.Padding
padding.PaddingBottom = UDim.new(0,0)
padding.PaddingLeft = UDim.new(0,0)
padding.PaddingRight = UDim.new(0,0)
padding.PaddingTop = UDim.new(0,0)

local unibarMenu = unibarLeftFrame:WaitForChild("UnibarMenu")
unibarMenu["2"]["2"].BackgroundTransparency = 1

local chatEnabled = game.StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Chat)
local enFromDis = not chatEnabled

local icons = unibarMenu["2"]["3"]

local chat

if chatEnabled then
	chat = icons:WaitForChild("chat")
	chat.Position = UDim2.fromOffset(50,0)
	chat.Size = UDim2.fromOffset(50,36)

	chat.Highlighter.BackgroundTransparency = 1
	chat.SelectedHighlighter.BackgroundTransparency = 1

	integrationIconFrame = chat:WaitForChild("IntegrationIconFrame")
	integrationIconFrame.Position = UDim2.new(0.5,-14,0.5,-13)
	integrationIconFrame.Size = UDim2.fromOffset(28,27)

	integrationIcon = integrationIconFrame:WaitForChild('IntegrationIcon')
	integrationIcon.AnchorPoint = Vector2.new(0.5,0.5)
	integrationIcon.Position = UDim2.fromScale(0.5,0.5)
	integrationIcon.Size = UDim2.fromScale(1,1)
	integrationIcon.Image = "rbxasset://textures/ui/Chat/Chat.png"
	integrationIcon.ImageRectOffset = Vector2.new(0,0)
	integrationIcon.ImageRectSize = Vector2.new(0,0)
	
end
	
cellnumber = nil
backpackiconframe = nil
backpackicon = nil

local Slots = {}

local function getSlots()
	table.clear(Slots)
	local hotbar = game.CoreGui.RobloxGui.Backpack.Hotbar
	local count = 0
	for i,v in pairs(hotbar:GetChildren()) do
		if v.Icon.Image ~= '' or v.ToolName.Text ~= '' or v.ToolTip.Text ~= '' then
			if not count then
				count = 0
			end
			count += 1
		end
	end
	return count
end



local function AdjustHotbarFrames()
	local InventoryFrame = game.CoreGui.RobloxGui.Backpack.Inventory
	local hotbar = game.CoreGui.RobloxGui.Backpack.Hotbar
	local NumberOfHotbarSlots = #hotbar:GetChildren()
	local hotbarIsVisible = not getSlots()

	local inventoryOpen = InventoryFrame.Visible -- (Show all)
	--print(inventoryOpen)
	local visualTotal = (inventoryOpen) and NumberOfHotbarSlots or getSlots()
	--print(visualTotal)
	local visualIndex = 0
	local hotbarIsVisible = (visualTotal >= 1)

	local function Readjust(visualIndex, visualTotal, frame) --NOTE: Only used for Hotbar slots
		local centered = hotbar.Size.X.Offset / 2
		local sizePlus = 5 + 60
		local midpointish = (visualTotal / 2) + 0.5
		local factor = visualIndex - midpointish
		frame.Position = UDim2.new(0, centered - (60 / 2) + (sizePlus * factor), 0, 5)
	end

	for i = 1, NumberOfHotbarSlots do
		local slot = hotbar[tostring(i)]
		if (slot.Icon.Image ~= '' or slot.ToolName.Text ~= '' or slot.ToolTip.Text ~= '') or inventoryOpen then
			slot.Visible = true
			visualIndex = visualIndex + 1
			Readjust(visualIndex, visualTotal, slot)
		else
			slot.Visible = false
		end
	end
end

if game.StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Backpack) then
	if not backpackiconframe then
		backpackiconframe = Instance.new("Frame", unibarLeftFrame)
		backpackicon = Instance.new("ImageButton",backpackiconframe)

		backpackiconframe.Position = (game.StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Chat) and UDim2.fromOffset(100,0)) or UDim2.fromOffset(50,0)
		backpackiconframe.Size = UDim2.fromOffset(50,36)
		backpackiconframe.BackgroundTransparency = 1

		backpackicon.Position = UDim2.new(.5, -11, 0.5, -14)
		backpackicon.Size = UDim2.fromOffset(22,28)
		backpackicon.Image = game.CoreGui.RobloxGui.Backpack.Inventory.Visible and "rbxasset://textures/ui/Backpack/Backpack_Down.png" or "rbxasset://textures/ui/Backpack/Backpack.png"
		backpackicon:ClearAllChildren()
		backpackicon.ImageColor3 = Color3.new(1,1,1)
		backpackicon.ImageTransparency = 0
		backpackicon.BackgroundTransparency = 1
		backpackicon.ImageRectSize = Vector2.zero
		backpackicon.ImageRectOffset = Vector2.zero

		backpackicon.MouseButton1Click:Connect(function()
			game.CoreGui.RobloxGui.Backpack.Inventory.Visible = not game.CoreGui.RobloxGui.Backpack.Inventory.Visible
			AdjustHotbarFrames()
		end)
	end
end


local healthcontainer
local healthbar
local fill
local healthPos

local healthEnabled = true
local healthEnFromDis = not healthEnabled

do
	healthcontainer = unibarLeftFrame.HealthBar
	healthbar = healthcontainer.HealthBar
	fill = healthbar.Fill

	healthcontainer.Size = UDim2.new(0,156,0, 3)
	healthcontainer.Position = UDim2.new(2,23,1, -9)
	healthPos = healthcontainer.Position

	healthbar.Position = UDim2.new(0,0,0,0)
	healthbar.Size = UDim2.new(1,0,1,0)
	healthbar.Image = "rbxassetid://3337834830"

	fill.Position = UDim2.fromScale(0,0)
	fill.Image = "rbxassetid://3337834830"
end

local username = Instance.new('TextLabel')

local LeaderstatsContainer = Instance.new("ImageButton")

game:GetService('GuiService').MenuClosed:Connect(function()
	if wasopen then
		chatopen = true
	end
	scalingIcon.Image = "rbxasset://textures/ui/Menu/Hamburger.png"
	menuIconHolder.BackgroundTransparency = 0.5
	forceListClose = false
end)

game:GetService('GuiService').MenuOpened:Connect(function()
	wasopen = chatopen
	chatopen = false
	scalingIcon.Image = "rbxasset://textures/ui/Menu/HamburgerDown.png"
	menuIconHolder.BackgroundTransparency = 0
	forceListClose = true
end)

local wasoff = false



game.Players.LocalPlayer.CharacterAdded:Connect(function()
	if game.StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Backpack) then
		if not backpackiconframe then
			backpackiconframe = Instance.new("Frame", unibarLeftFrame)
			backpackicon = Instance.new("ImageButton",backpackiconframe)

			backpackiconframe.Position = (game.StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Chat) and UDim2.fromOffset(100,0)) or UDim2.fromOffset(50,0)
			backpackiconframe.Size = UDim2.fromOffset(50,36)
			backpackiconframe.BackgroundTransparency = 1

			backpackicon.Position = UDim2.new(.5, -11, 0.5, -14)
			backpackicon.Size = UDim2.fromOffset(22,28)
			backpackicon.Image = game.CoreGui.RobloxGui.Backpack.Inventory.Visible and "rbxasset://textures/ui/Backpack/Backpack_Down.png" or "rbxasset://textures/ui/Backpack/Backpack.png"
			backpackicon:ClearAllChildren()
			backpackicon.ImageColor3 = Color3.new(1,1,1)
			backpackicon.ImageTransparency = 0
			backpackicon.BackgroundTransparency = 1
			backpackicon.ImageRectSize = Vector2.zero
			backpackicon.ImageRectOffset = Vector2.zero

			backpackicon.MouseButton1Click:Connect(function()
				game.CoreGui.RobloxGui.Backpack.Inventory.Visible = not game.CoreGui.RobloxGui.Backpack.Inventory.Visible
				AdjustHotbarFrames()
			end)
		end
	end
end)

username.Font = Enum.Font.SourceSansBold
username.Text = game.Players.LocalPlayer.Name
username.Position = UDim2.fromOffset(7,-2)
username.Size = UDim2.new(1,-14,0,22)
username.TextSize = 14
username.TextStrokeTransparency = 1
username.TextColor3 = Color3.new(1,1,1)
username.TextXAlignment = Enum.TextXAlignment.Left
username.TextYAlignment = Enum.TextYAlignment.Bottom
username.BackgroundTransparency = 1
username.Parent = rf

local usernamePos = username.Position

LeaderstatsContainer.Name = "LeaderstatsContainer"
LeaderstatsContainer.BackgroundTransparency = 1.000
LeaderstatsContainer.Position = UDim2.new(1, -77, 0, 0)
LeaderstatsContainer.Size = UDim2.new(0, 0, 1, 0)
LeaderstatsContainer.AutoButtonColor = false
LeaderstatsContainer.Parent = rf

rf.Position = UDim2.fromScale(1,0)
rf.Size = UDim2.new(0, 170,1, 0)
rf.AnchorPoint = Vector2.new(1,0)

local PlayerListContainer = Instance.new("Frame", tba)
local ScrollList = Instance.new("ScrollingFrame", PlayerListContainer)
local PlayerHolder = Instance.new("Frame", ScrollList)
local StatHolder = Instance.new("Frame", ScrollList)
local EPadding = Instance.new("UIPadding", PlayerHolder)
local List = Instance.new("UIListLayout", PlayerHolder)

PlayerListContainer.Name = "PlayerListContainer"
PlayerListContainer.AnchorPoint = Vector2.new(1,0)
PlayerListContainer.BackgroundTransparency = 1.000
PlayerListContainer.Position = UDim2.new(1, 0,0,38)
PlayerListContainer.Size = UDim2.new(0, 170,0.5, 0)

ScrollList.Name = "ScrollList"
ScrollList.Size = UDim2.new(100, 0, 1, 0)
ScrollList.Position = UDim2.new(0, 0, 0, 0)
ScrollList.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ScrollList.ClipsDescendants = true
ScrollList.BackgroundTransparency = 1
ScrollList.BorderSizePixel = 0
ScrollList.ScrollBarThickness = 0
ScrollList.CanvasSize = UDim2.new(0, 0, 2, 0)

PlayerHolder.Name = "PlayerHolder"
PlayerHolder.Size = UDim2.new(0,170,1,0)
PlayerHolder.BackgroundTransparency = 1
PlayerHolder.Position = UDim2.fromScale(0,0)

StatHolder.Name = "StatHolder"
StatHolder.Size = UDim2.new(0,0,1,0)
StatHolder.BackgroundTransp
